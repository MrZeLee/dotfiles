#!/usr/bin/env bash

# Set the workspace file
WORKSPACE_FILE="codecompanion-workspace.json"

# Check if the workspace file exists
if [ ! -f "$WORKSPACE_FILE" ]; then
  # Create the base structure
  echo "Creating $WORKSPACE_FILE..."
  BASE_JSON='{
  "name": "CodeCompanion.nvim",
  "version": "1.0.0",
  "workspace_spec": "1.0",
  "description": "An example workspace file",
  "system_prompt": "CodeCompanion.nvim is an AI-powered productivity tool integrated into Neovim, designed to enhance the development workflow by seamlessly interacting with various large language models (LLMs). It offers features like inline code transformations, code creation, refactoring, and supports multiple LLMs such as OpenAI, Anthropic, and Google Gemini, among others. With tools for variable management, agents, and custom workflows, CodeCompanion.nvim streamlines coding tasks and facilitates intelligent code assistance directly within the Neovim editor",
  "groups": []
}'
  echo "$BASE_JSON" > "$WORKSPACE_FILE"
fi

# Find all files excluding .git directory and construct JSON array
# FILE_ARRAY=$(find . -not -path "./.git/*" -type f -print0 | while IFS= read -r -d $'\0' file; do

# Find all files tracked by git, respecting .gitignore
FILE_ARRAY=$(git ls-files | while IFS= read -r file; do
  printf '{"description": "%s", "path": "%s"},\n' "$file" "$file"
done | sed '$ s/,$//') # Remove trailing comma

# Construct the new files entry
NEW_FILES='"files": ['"$FILE_ARRAY"']'

# Construct the groups array
NEW_GROUPS='[{"name": "Chat Buffer", "system_prompt": "...", "opts": {"remove_config_system_prompt": true}, '"$NEW_FILES"'}]'

# Update the workspace file
jq ".groups = $NEW_GROUPS" "$WORKSPACE_FILE" > tmp.json && mv tmp.json "$WORKSPACE_FILE"

echo "Successfully updated $WORKSPACE_FILE"


