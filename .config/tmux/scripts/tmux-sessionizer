#!/usr/bin/env bash

# Check if exactly one argument is provided
if [[ $# -eq 1 ]]; then
    selected=$1
else
    # .dotfiles folder
    dot_dir=$(find ~/.dotfiles -mindepth 0 -maxdepth 0 -type d 2> /dev/null)

    # Find all git directories within ~/Documents/01-Git
    git_dirs=$(find ~/Documents/01-Git -mindepth 1 -maxdepth 1 -type d 2> /dev/null)
    other_git_dirs=$(find ~/Documents/01-Git -mindepth 2 -maxdepth 2 -type d -regex '.*/[0-9]\{2\}-[^/]*$' 2> /dev/null)

    doc_dirs=$(find ~/Documents -mindepth 1 -maxdepth 1 -type d 2> /dev/null)
    # Find all directories within Google Drive that match the pattern
    # TODO review way to not show user and email in dotfiles, but don't create to much overhead

    # Directory to search
    base_directory="/Users/$USER/Library/CloudStorage"

    # Define the path to the .gdrive_account file
    gdrive_account_file="$HOME/.gdrive_account"

    # Check if the .gdrive_account file exists
    if [ -f "$gdrive_account_file" ]; then
        # If the file exists, read the value
        chosen_directory=$(<"$gdrive_account_file")
    else

        # Initialize an empty array to store directories
        directories=()

        # Use find with -print0 and read the directories into an array
        while IFS= read -r -d '' dir; do
            directories+=("$dir")
        done < <(find "$base_directory" -type d -not -name ".*" -print0 -mindepth 1 -maxdepth 1)

        # If there is more than one directory, prompt the user to choose
        if [ ${#directories[@]} -gt 1 ]; then
          echo "Multiple directories found. Please choose one:"
          select chosen_directory in "${directories[@]}"; do
            if [ -n "$chosen_directory" ]; then
              echo "You chose: $chosen_directory"
              break
            else
              echo "Invalid choice. Please try again."
            fi
          done
        else
            # Check if there are any directories left after filtering
            if [ ${#directories[@]} -eq 1 ]; then
                # If only one directory is present, select it automatically
                chosen_directory="${directories[0]}"
            fi
        fi

        # Save the chosen directory to the .gdrive_account file
        chosen_directory=$(echo -e "$chosen_directory/My Drive")
        echo "$chosen_directory" > "$gdrive_account_file"
    fi

    drive_dirs=$(find "$chosen_directory" -mindepth 1 -maxdepth 6 -type d -regex '.*/[0-9]\{2\}-[^/]*$' 2> /dev/null)
    # Combine all directories, sort them, remove duplicates, and select one using fzf
    selected=$(echo -e "$dot_dir\n$doc_dirs\n$git_dirs\n$other_git_dirs\n$drive_dirs" | sort | uniq | fzf)
fi

# Exit if no directory is selected
if [[ -z $selected ]]; then
    exit 0
fi

# Format the selected directory name to be used as a tmux session name
selected_name=$(basename "$selected" | tr . _)
# Check if tmux is running
tmux_running=$(pgrep tmux)

# If not inside a tmux session and tmux is not running, start a new session
if [[ -z $TMUX ]] && [[ -z $tmux_running ]]; then
    tmux new-session -s "$selected_name" -c "$selected"
    exit 0
fi

# If the tmux session with the selected name does not exist, create it detached
if ! tmux has-session -t="$selected_name" 2> /dev/null; then
    tmux new-session -ds "$selected_name" -c "$selected"
fi

# Attach to the tmux session with the selected name
tmux switch-client -t "$selected_name"
tmux attach-session -t "$selected_name"
